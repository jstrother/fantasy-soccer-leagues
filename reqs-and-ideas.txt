needed for Server
	incoming data taken from FantasyData.com
		league
		schedule
		teams
		players
		stats
		fantasy points
	
	create/login User
		userName  //created during sign-up
		userPassword  //created during sign-up
		fantasyClub  //created during sign-.js
		fantasyLeague  //created or joined just after sign-up
		fantasyDivision  //determined after fantasyLeague is joined, league is divided in half and first come first serve as far as D1
		fantasyChampsLeague  //determined after a full season played, top 3 go to champions league
	
	outgoing data:
		these are created from the incoming data, and some functions, using the schema in the models folder
			new Player
			new User
			new Schedule
			new Fantasy Club
			new Fantasy League
			new Fantasy Schedule
			new Fantasy Match
			new Fantasy League
			new Fantasy Champions League
		
	
	

compteted list:

needed from MLS website:
	-schedule
		-find .schedule_list then search down via for loop with i = 374 (# of total mls games for regular season)
		-separate each group of matches by .match_date
			-the match date is attached to the first li of the particular group
		-each li is searched for .match_item
		-two children down is .match_status
			-if this = final, then scrape each team's players stats and add to database
		-same level as .match_status are both .home_club and .vs_club
			-each has a child .club_name and .match_score
		-this should be scraped nightly to catch any rescheduled games
	-teams
		-can be found on the standings page, just need to pluck team names.  this will help when the league expands during the off-season and freeAgent, etc
		-clubName = $('[data-title = "club"]').firstChild.html();
		-teams.push(clubName); //add to teams array
	-players
		-the player pages start at 'page=0' in the url, easy to do with a for loop 0 - 20
		-loop through $('.player_list')
			-playerName = $('.name_link').html();
			-playerClub = $('.club');
			-playerPositioni = $('.')
			-search teams objects by playerClub, pushing playerName, playerClub, playerPosition to teams.clubName.roster.sameVariable <-- placerHolder!
	-player stats
		-can be found at `http://www.mlssoccer.com/players/${playerName}`
		-if $(.class).html() = //any on the following list mark as unAvailble:
			-Loaned OUt
			-Injured
			-Suspended
			-
			-

		-from player stats, search for current year then take stats from that line
		-definitions:
			GP = games played
			GS = games started
			G = goals
			MINS = minutes played
			A = assists
			SHTS = shots taken
			SOG = shots on goal
			FC = fouls committed
			OFF = times caught offside
			Y = yellow cards earned
			R = red cards earned